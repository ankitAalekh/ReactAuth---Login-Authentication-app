{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arc_reactor\\\\React\\\\Authentication\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"yFc7WB3CNcBdZg4l88fl3A9jDF4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Arc_reactor/React/Authentication/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","setToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACL,KAAD,EAAOM,QAAP,IAAmBT,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAMU,cAAc,GAAE,CAAC,CAACP,KAAxB;;AACA,QAAMQ,YAAY,GAAIR,KAAD,IAAU;AAC3BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMS,aAAa,GAAG,MAAK;AACvBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG;AACjBV,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAAEM,cAFK;AAGjBL,IAAAA,KAAK,EAAEM,YAHU;AAIjBL,IAAAA,MAAM,EAAEM;AAJS,GAArB;AAMF,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cAA4CL,KAAK,CAACM;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAMP,mB;;KAAAA,mB;AAkBb,eAAeN,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [token,setToken] = useState(null)\r\n    const userIsLoggedIn =!!token;\r\n    const loginHandler = (token) =>{\r\n        setToken(token);\r\n    };\r\n    const logoutHandler = () =>{\r\n        setToken(null);\r\n    };\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n  return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}